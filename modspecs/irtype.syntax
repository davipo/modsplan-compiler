# irtype.syntax
# Intermediate representation type system
# Based on LLVM types


use constants       # constant, number


type => primitivetype
type => pointertype
type => functype
type => vectortype
type => arraytype
type => structtype
type => packedstructtype
type => opaquetype
type => TYPEID              # named type (alias)

primitivetype => INTTYPE        # iN, N = integer (see irtypes.tokens)
primitivetype => FLOATTYPE
primitivetype => labeltype
primitivetype => voidtype
primitivetype => metadatatype

labeltype => 'label'
voidtype => 'void'
metadatatype => 'metadata'


pointertype => type '*'

functype => type '(' type,* ')'

vectortype => '<' INTEGER 'x' type '>'      # for parallel processing, not an aggregate type

arraytype => '[' INTEGER 'x' type ']'

structtype => '{' type,* '}'

packedstructtype => '<{' type,* '}>'

opaquetype => 'opaque'
    ##  needed?

