
Parsing cell_select.rho.rho2 ... 


Tree:

procs
   COMMENT(#// cell_select.rho)
   parallel*
      parallel
      |  COMMENT(#// rchain-architecture.readthedocs.io/en/latest/contracts/contract-design.html#rholang-a-concurrent-language)
      parallel
      parallel
      parallel
      |  proc
      |     rreceive
      |     |  receipt
      |     |     channel
      |     |     |  var
      |     |     |     NAME(Cell)
      |     |     varwild*
      |     |     |  varwild
      |     |     |     var
      |     |     |     |  NAME(get)
      |     |     |  varwild
      |     |     |     var
      |     |     |     |  NAME(set)
      |     |     |  varwild
      |     |     |     var
      |     |     |     |  NAME(state)
      |     |     remainder?
      |     |  procs
      |     |     parallel*
      |     |     |  parallel
      |     |     |     proc
      |     |     |     |  branch*
      |     |     |     |     branch
      |     |     |     |     |  receipt*
      |     |     |     |     |     receipt
      |     |     |     |     |     |  channel
      |     |     |     |     |     |     var
      |     |     |     |     |     |     |  NAME(get)
      |     |     |     |     |     |  varwild*
      |     |     |     |     |     |     varwild
      |     |     |     |     |     |     |  var
      |     |     |     |     |     |     |     NAME(rtn)
      |     |     |     |     |     |  remainder?
      |     |     |     |     |     receipt
      |     |     |     |     |     |  channel
      |     |     |     |     |     |     var
      |     |     |     |     |     |     |  NAME(state)
      |     |     |     |     |     |  varwild*
      |     |     |     |     |     |     varwild
      |     |     |     |     |     |     |  var
      |     |     |     |     |     |     |     NAME(v)
      |     |     |     |     |     |  remainder?
      |     |     |     |     |  procs
      |     |     |     |     |     parallel*
      |     |     |     |     |     |  parallel
      |     |     |     |     |     |     proc
      |     |     |     |     |     |     |  send
      |     |     |     |     |     |     |     channel
      |     |     |     |     |     |     |     |  var
      |     |     |     |     |     |     |     |     NAME(rtn)
      |     |     |     |     |     |     |     proc*
      |     |     |     |     |     |     |     |  proc
      |     |     |     |     |     |     |     |     test
      |     |     |     |     |     |     |     |     |  andtest
      |     |     |     |     |     |     |     |     |     nottest
      |     |     |     |     |     |     |     |     |     |  comparison
      |     |     |     |     |     |     |     |     |     |     expr
      |     |     |     |     |     |     |     |     |     |     |  term
      |     |     |     |     |     |     |     |     |     |     |     factor
      |     |     |     |     |     |     |     |     |     |     |     |  atom
      |     |     |     |     |     |     |     |     |     |     |     |     variable
      |     |     |     |     |     |     |     |     |     |     |     |     |  identifier
      |     |     |     |     |     |     |     |     |     |     |     |     |     NAME(v)
      |     |     |     |     |     |     |     |     |     |     |     multiplication*
      |     |     |     |     |     |     |     |     |     |     |  addition*
      |     |     |     |     |     |     |     |     |     |     compare?
      |     |     |     |     |     |     |     |     |     conjunction*
      |     |     |     |     |     |     |     |     |  disjunction*
      |     |     |     |     |     |  parallel
      |     |     |     |     |     |  parallel
      |     |     |     |     |     |     proc
      |     |     |     |     |     |     |  send
      |     |     |     |     |     |     |     channel
      |     |     |     |     |     |     |     |  var
      |     |     |     |     |     |     |     |     NAME(state)
      |     |     |     |     |     |     |     proc*
      |     |     |     |     |     |     |     |  proc
      |     |     |     |     |     |     |     |     test
      |     |     |     |     |     |     |     |     |  andtest
      |     |     |     |     |     |     |     |     |     nottest
      |     |     |     |     |     |     |     |     |     |  comparison
      |     |     |     |     |     |     |     |     |     |     expr
      |     |     |     |     |     |     |     |     |     |     |  term
      |     |     |     |     |     |     |     |     |     |     |     factor
      |     |     |     |     |     |     |     |     |     |     |     |  atom
      |     |     |     |     |     |     |     |     |     |     |     |     variable
      |     |     |     |     |     |     |     |     |     |     |     |     |  identifier
      |     |     |     |     |     |     |     |     |     |     |     |     |     NAME(v)
      |     |     |     |     |     |     |     |     |     |     |     multiplication*
      |     |     |     |     |     |     |     |     |     |     |  addition*
      |     |     |     |     |     |     |     |     |     |     compare?
      |     |     |     |     |     |     |     |     |     conjunction*
      |     |     |     |     |     |     |     |     |  disjunction*
      |     |     |     |     |     |  parallel
      |     |     |     |     |     |  parallel
      |     |     |     |     |     |     proc
      |     |     |     |     |     |     |  send
      |     |     |     |     |     |     |     channel
      |     |     |     |     |     |     |     |  var
      |     |     |     |     |     |     |     |     NAME(Cell)
      |     |     |     |     |     |     |     proc*
      |     |     |     |     |     |     |     |  proc
      |     |     |     |     |     |     |     |     test
      |     |     |     |     |     |     |     |     |  andtest
      |     |     |     |     |     |     |     |     |     nottest
      |     |     |     |     |     |     |     |     |     |  comparison
      |     |     |     |     |     |     |     |     |     |     expr
      |     |     |     |     |     |     |     |     |     |     |  term
      |     |     |     |     |     |     |     |     |     |     |     factor
      |     |     |     |     |     |     |     |     |     |     |     |  atom
      |     |     |     |     |     |     |     |     |     |     |     |     variable
      |     |     |     |     |     |     |     |     |     |     |     |     |  identifier
      |     |     |     |     |     |     |     |     |     |     |     |     |     NAME(get)
      |     |     |     |     |     |     |     |     |     |     |     multiplication*
      |     |     |     |     |     |     |     |     |     |     |  addition*
      |     |     |     |     |     |     |     |     |     |     compare?
      |     |     |     |     |     |     |     |     |     conjunction*
      |     |     |     |     |     |     |     |     |  disjunction*
      |     |     |     |     |     |     |     |  proc
      |     |     |     |     |     |     |     |     test
      |     |     |     |     |     |     |     |     |  andtest
      |     |     |     |     |     |     |     |     |     nottest
      |     |     |     |     |     |     |     |     |     |  comparison
      |     |     |     |     |     |     |     |     |     |     expr
      |     |     |     |     |     |     |     |     |     |     |  term
      |     |     |     |     |     |     |     |     |     |     |     factor
      |     |     |     |     |     |     |     |     |     |     |     |  atom
      |     |     |     |     |     |     |     |     |     |     |     |     variable
      |     |     |     |     |     |     |     |     |     |     |     |     |  identifier
      |     |     |     |     |     |     |     |     |     |     |     |     |     NAME(set)
      |     |     |     |     |     |     |     |     |     |     |     multiplication*
      |     |     |     |     |     |     |     |     |     |     |  addition*
      |     |     |     |     |     |     |     |     |     |     compare?
      |     |     |     |     |     |     |     |     |     conjunction*
      |     |     |     |     |     |     |     |     |  disjunction*
      |     |     |     |     |     |     |     |  proc
      |     |     |     |     |     |     |     |     test
      |     |     |     |     |     |     |     |     |  andtest
      |     |     |     |     |     |     |     |     |     nottest
      |     |     |     |     |     |     |     |     |     |  comparison
      |     |     |     |     |     |     |     |     |     |     expr
      |     |     |     |     |     |     |     |     |     |     |  term
      |     |     |     |     |     |     |     |     |     |     |     factor
      |     |     |     |     |     |     |     |     |     |     |     |  atom
      |     |     |     |     |     |     |     |     |     |     |     |     variable
      |     |     |     |     |     |     |     |     |     |     |     |     |  identifier
      |     |     |     |     |     |     |     |     |     |     |     |     |     NAME(state)
      |     |     |     |     |     |     |     |     |     |     |     multiplication*
      |     |     |     |     |     |     |     |     |     |     |  addition*
      |     |     |     |     |     |     |     |     |     |     compare?
      |     |     |     |     |     |     |     |     |     conjunction*
      |     |     |     |     |     |     |     |     |  disjunction*
      |     |     |     |     |     |  parallel
      |     |     |     |     branch
      |     |     |     |     |  receipt*
      |     |     |     |     |     receipt
      |     |     |     |     |     |  channel
      |     |     |     |     |     |     var
      |     |     |     |     |     |     |  NAME(set)
      |     |     |     |     |     |  varwild*
      |     |     |     |     |     |     varwild
      |     |     |     |     |     |     |  var
      |     |     |     |     |     |     |     NAME(newValue)
      |     |     |     |     |     |  remainder?
      |     |     |     |     |     receipt
      |     |     |     |     |     |  channel
      |     |     |     |     |     |     var
      |     |     |     |     |     |     |  NAME(state)
      |     |     |     |     |     |  varwild*
      |     |     |     |     |     |     varwild
      |     |     |     |     |     |     |  var
      |     |     |     |     |     |     |     NAME(v)
      |     |     |     |     |     |  remainder?
      |     |     |     |     |  procs
      |     |     |     |     |     parallel*
      |     |     |     |     |     |  parallel
      |     |     |     |     |     |     proc
      |     |     |     |     |     |     |  send
      |     |     |     |     |     |     |     channel
      |     |     |     |     |     |     |     |  var
      |     |     |     |     |     |     |     |     NAME(state)
      |     |     |     |     |     |     |     proc*
      |     |     |     |     |     |     |     |  proc
      |     |     |     |     |     |     |     |     test
      |     |     |     |     |     |     |     |     |  andtest
      |     |     |     |     |     |     |     |     |     nottest
      |     |     |     |     |     |     |     |     |     |  comparison
      |     |     |     |     |     |     |     |     |     |     expr
      |     |     |     |     |     |     |     |     |     |     |  term
      |     |     |     |     |     |     |     |     |     |     |     factor
      |     |     |     |     |     |     |     |     |     |     |     |  atom
      |     |     |     |     |     |     |     |     |     |     |     |     variable
      |     |     |     |     |     |     |     |     |     |     |     |     |  identifier
      |     |     |     |     |     |     |     |     |     |     |     |     |     NAME(newValue)
      |     |     |     |     |     |     |     |     |     |     |     multiplication*
      |     |     |     |     |     |     |     |     |     |     |  addition*
      |     |     |     |     |     |     |     |     |     |     compare?
      |     |     |     |     |     |     |     |     |     conjunction*
      |     |     |     |     |     |     |     |     |  disjunction*
      |     |     |     |     |     |  parallel
      |     |     |     |     |     |  parallel
      |     |     |     |     |     |     proc
      |     |     |     |     |     |     |  send
      |     |     |     |     |     |     |     channel
      |     |     |     |     |     |     |     |  var
      |     |     |     |     |     |     |     |     NAME(Cell)
      |     |     |     |     |     |     |     proc*
      |     |     |     |     |     |     |     |  proc
      |     |     |     |     |     |     |     |     test
      |     |     |     |     |     |     |     |     |  andtest
      |     |     |     |     |     |     |     |     |     nottest
      |     |     |     |     |     |     |     |     |     |  comparison
      |     |     |     |     |     |     |     |     |     |     expr
      |     |     |     |     |     |     |     |     |     |     |  term
      |     |     |     |     |     |     |     |     |     |     |     factor
      |     |     |     |     |     |     |     |     |     |     |     |  atom
      |     |     |     |     |     |     |     |     |     |     |     |     variable
      |     |     |     |     |     |     |     |     |     |     |     |     |  identifier
      |     |     |     |     |     |     |     |     |     |     |     |     |     NAME(get)
      |     |     |     |     |     |     |     |     |     |     |     multiplication*
      |     |     |     |     |     |     |     |     |     |     |  addition*
      |     |     |     |     |     |     |     |     |     |     compare?
      |     |     |     |     |     |     |     |     |     conjunction*
      |     |     |     |     |     |     |     |     |  disjunction*
      |     |     |     |     |     |     |     |  proc
      |     |     |     |     |     |     |     |     test
      |     |     |     |     |     |     |     |     |  andtest
      |     |     |     |     |     |     |     |     |     nottest
      |     |     |     |     |     |     |     |     |     |  comparison
      |     |     |     |     |     |     |     |     |     |     expr
      |     |     |     |     |     |     |     |     |     |     |  term
      |     |     |     |     |     |     |     |     |     |     |     factor
      |     |     |     |     |     |     |     |     |     |     |     |  atom
      |     |     |     |     |     |     |     |     |     |     |     |     variable
      |     |     |     |     |     |     |     |     |     |     |     |     |  identifier
      |     |     |     |     |     |     |     |     |     |     |     |     |     NAME(set)
      |     |     |     |     |     |     |     |     |     |     |     multiplication*
      |     |     |     |     |     |     |     |     |     |     |  addition*
      |     |     |     |     |     |     |     |     |     |     compare?
      |     |     |     |     |     |     |     |     |     conjunction*
      |     |     |     |     |     |     |     |     |  disjunction*
      |     |     |     |     |     |     |     |  proc
      |     |     |     |     |     |     |     |     test
      |     |     |     |     |     |     |     |     |  andtest
      |     |     |     |     |     |     |     |     |     nottest
      |     |     |     |     |     |     |     |     |     |  comparison
      |     |     |     |     |     |     |     |     |     |     expr
      |     |     |     |     |     |     |     |     |     |     |  term
      |     |     |     |     |     |     |     |     |     |     |     factor
      |     |     |     |     |     |     |     |     |     |     |     |  atom
      |     |     |     |     |     |     |     |     |     |     |     |     variable
      |     |     |     |     |     |     |     |     |     |     |     |     |  identifier
      |     |     |     |     |     |     |     |     |     |     |     |     |     NAME(state)
      |     |     |     |     |     |     |     |     |     |     |     multiplication*
      |     |     |     |     |     |     |     |     |     |     |  addition*
      |     |     |     |     |     |     |     |     |     |     compare?
      |     |     |     |     |     |     |     |     |     conjunction*
      |     |     |     |     |     |     |     |     |  disjunction*
      |     |     |     |     |     |  parallel


**** Syntax test done ****

