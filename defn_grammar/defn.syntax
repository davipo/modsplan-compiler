# defn.syntax
# This is the syntax for .defn specifications.

# Copyright 2011-2013 by David H Post, DaviWorks.com.


use constants       # constant, number


defn_file.root => piece*

piece => NEWLINE
piece => definition

definition => signature NEWLINE instructions

signature => nonterm '(' child* ')'     # match a node with these children
signature => terminal '(' LITERAL ')'   # match when terminal text == literal string

child => nonterm QUANTIFIER?
child => terminal QUANTIFIER?


## Implement qualident later; may not need index
# nonterm => qualident index?
# qualident => identifier qualifier?
# qualifier => '_' subtype
# subtype => identifier
# index => INTEGER                      # to distinguish multiple instances

nonterm => identifier       ## simpler for now

identifier => LOWERNAME     # lowercase letters only

terminal => UPPERNAME       # uppercase letters and '_'


instructions => INDENT instruction+ NEWLINE* DEDENT

instruction => expansion NEWLINE        ### is this needed?
instruction => rewrite NEWLINE
instruction => branch NEWLINE
instruction => label ':' NEWLINE instructions?
instruction => word+ NEWLINE

expansion => '&' child          # generate code for child node

rewrite => '=' signature

label => LOWERNAME

branch => BR label,+

word => directive
word => LITERAL
word => constant
word => child                   # substitute text of child node

directive => '.' identifier '(' word,* ')'      # compiler directive


